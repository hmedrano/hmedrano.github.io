[{"fullname": "erddapClient", "modulename": "erddapClient", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server", "modulename": "erddapClient", "qualname": "ERDDAP_Server", "type": "class", "doc": "<p>Class with the representation and methods to access a ERDDAP server.</p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.__init__", "modulename": "erddapClient", "qualname": "ERDDAP_Server.__init__", "type": "function", "doc": "<p>Constructs a ERDDAP Server object \n...\nArguments:</p>\n\n<p><code>url</code>  : The ERDDAP Server URL </p>\n\n<p><code>auth</code> : Tupple with username and password, to access a protected ERDDAP Server</p>\n", "parameters": ["self", "url", "auth", "lazyload"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.ALLDATASETS_VARIABLES", "modulename": "erddapClient", "qualname": "ERDDAP_Server.ALLDATASETS_VARIABLES", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.tabledapAllDatasets", "modulename": "erddapClient", "qualname": "ERDDAP_Server.tabledapAllDatasets", "type": "variable", "doc": "<p>An <code>erddapClient.ERDDAP_Tabledap</code> object with the reference to the \"allDatasets\" \nDataset, <a href=\"https://coastwatch.pfeg.noaa.gov/erddap/download/setupDatasetsXml.html#EDDTableFromAllDatasets\">About allDatasets</a></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.version_numeric", "modulename": "erddapClient", "qualname": "ERDDAP_Server.version_numeric", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.version", "modulename": "erddapClient", "qualname": "ERDDAP_Server.version", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.version_string", "modulename": "erddapClient", "qualname": "ERDDAP_Server.version_string", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.search", "modulename": "erddapClient", "qualname": "ERDDAP_Server.search", "type": "function", "doc": "<p>Makes a search request to the ERDDAP Server</p>\n\n<p>Search filters kwargs:</p>\n\n<p><code>searchFor</code> :</p>\n\n<ul>\n<li>This is a Google-like search of the datasets metadata:\nType the words you want to search for, with spaces between \nthe words.  ERDDAP will search for the words separately, \nnot as a phrase. </li>\n<li>To search for a phrase, put double quotes around the \nphrase (for example, \"wind speed\"). \nTo exclude datasets with a specific word, use \n-excludedWord To exclude datasets with a specific \nphrase, use -\"excluded phrase\". </li>\n<li>Don't use AND between search terms. It is implied. The \nresults will include only the datasets that have all of \nthe specified words and phrases (and none of the excluded \nwords and phrases) in the dataset's metadata (data about \nthe dataset). </li>\n<li>Searches are not case-sensitive. </li>\n<li>To search for specific attribute values, use \nattName=attValue . </li>\n<li>To find just grid or just table datasets, include \nprotocol=griddap or protocol=tabledap in your search. </li>\n<li>This ERDDAP is using searchEngine=original. </li>\n<li>In this ERDDAP, you can search for any part of a word. </li>\n<li>For example, searching for spee will find datasets with \nspeed and datasets with WindSpeed. </li>\n<li>In this ERDDAP, the last word in a phrase may be a partial \nword. For example, to find datasets from a specific website \n(usually the start of the datasetID), include (for example) \n\"datasetID=erd\" in your search.</li>\n</ul>\n\n<p>Optional filters:</p>\n\n<p><code>itemsPerPage</code> : Set the maximum number of results. (Default: 1000)</p>\n\n<p><code>page</code> : If the number of results is bigger than the \"<code>itemsPerPage</code>\" you can\n        specify the page of results. (Default: 1)</p>\n\n<p>Returns a <code>erddapClient.ERDDAP_SearchResults</code> object</p>\n", "parameters": ["self", "filters"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.getSearchURL", "modulename": "erddapClient", "qualname": "ERDDAP_Server.getSearchURL", "type": "function", "doc": "<p>Builds the url call for the basic Search ERDDAP API Rest service.</p>\n\n<p>Arguments</p>\n\n<p><code>filetype</code> :  The result format (htmlTable, csv, json, tsv, etc) \n              <a href=\"https://coastwatch.pfeg.noaa.gov/erddap/rest.html#responses\">https://coastwatch.pfeg.noaa.gov/erddap/rest.html#responses</a></p>\n\n<p>Search filters kwargs:</p>\n\n<p><code>searchFor</code>        </p>\n\n<ul>\n<li>This is a Google-like search of the datasets metadata:\nType the words you want to search for, with spaces between \nthe words.  ERDDAP will search for the words separately, \nnot as a phrase. </li>\n<li>To search for a phrase, put double quotes around the \nphrase (for example, \"wind speed\"). \nTo exclude datasets with a specific word, use \n-excludedWord To exclude datasets with a specific \nphrase, use -\"excluded phrase\". </li>\n<li>Don't use AND between search terms. It is implied. The \nresults will include only the datasets that have all of \nthe specified words and phrases (and none of the excluded \nwords and phrases) in the dataset's metadata (data about \nthe dataset). </li>\n<li>Searches are not case-sensitive. </li>\n<li>To search for specific attribute values, use \nattName=attValue . </li>\n<li>To find just grid or just table datasets, include \nprotocol=griddap or protocol=tabledap in your search. </li>\n<li>This ERDDAP is using searchEngine=original. </li>\n<li>In this ERDDAP, you can search for any part of a word. </li>\n<li>For example, searching for spee will find datasets with \nspeed and datasets with WindSpeed. </li>\n<li>In this ERDDAP, the last word in a phrase may be a partial \nword. For example, to find datasets from a specific website \n(usually the start of the datasetID), include (for example) \n\"datasetID=erd\" in your search.</li>\n</ul>\n\n<p>Optional filters:</p>\n\n<p><code>itemsPerPage</code> :  Set the maximum number of results. (Default: 1000)</p>\n\n<p><code>page</code> : If the number of results is bigger than the \"itemsPerPage\" you can\n         specify the page of results. (Default: 1)           </p>\n\n<p>Returns a string with the url search request.</p>\n", "parameters": ["self", "filetype", "searchFilters"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.advancedSearch", "modulename": "erddapClient", "qualname": "ERDDAP_Server.advancedSearch", "type": "function", "doc": "<p>Makes a advancedSearch request to the ERDDAP Server</p>\n\n<p>Search filters kwargs:</p>\n\n<p><code>searchFor</code> : This is a Google-like search of the datasets metadata, set the words you \n              want to search for  with spaces between the words.  ERDDAP will search \n              for the words separately, not as a phrase. \n              To search for a phrase, put double quotes around the phrase (for \n              example, \"wind speed\"). \n              To exclude datasets with a specific word, use -excludedWord. \n              To exclude datasets with a specific phrase, use -\"excluded phrase\" \n              To search for specific attribute values, use attName=attValue\n              To find just grid or table datasets, include protocol=griddap \n              or protocol=tabledap</p>\n\n<p>Optional filters:</p>\n\n<p><code>protocolol</code>    : Set either: griddap, tabledap or wms (Default: (ANY))</p>\n\n<p><code>cdm_data_type</code> : Set either: grid, timeseries, point, timeseriesProfile, trajectory\n                  trajectoryProfile, etc.. (Default: (ANY))</p>\n\n<p><code>institution</code>   : Set either to one of the available instituion values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>ioos_category</code> : Set either to one of the available ioos_category values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>keywords</code>      : Set either to one of the available keywords values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>long_name</code>     : Set either to one of the available long_name values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>standard_name</code> : Set either to one of the available standard_name values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>variableName</code>  : Set either to one of the available variable names values in the \n                  ERDDAP (Default: (ANY))</p>\n\n<p><code>minLon</code>, <code>maxLon</code> : Some datasets have longitude values within -180 to 180, others \n                     use 0 to 360. If you specify Min and Max Longitude within -180 to 180\n                     (or 0 to 360), ERDDAP will only find datasets that match the values \n                     you specify. Consider doing one search: longitude -180 to 360, or \n                     two searches: longitude -180 to 180, and 0 to 360.</p>\n\n<p><code>minLat</code>, <code>maxLat</code> : Set latitude bounds, range -90 to 90 </p>\n\n<p><code>minTime</code>, <code>maxTime</code> : Your can pass a <datetime> object or a string with the following\n                       specifications</p>\n\n<blockquote>\n  <ul>\n  <li>A time string with the format yyyy-MM-ddTHH:mm:ssZ, <br />\n  for example, 2009-01-21T23:00:00Z.  If you specify something, you must include yyyy-MM-dd. <br />\n  You can omit (backwards from the end) Z, :ss, :mm, :HH, and T. <br />\n  Always use UTC (GMT/Zulu) time.   </li>\n  <li>Or specify the number of seconds since 1970-01-01T00:00:00Z.                                  </li>\n  <li>Or specify \"now-nUnits\", for example, \"now-7days\"        </li>\n  </ul>\n</blockquote>\n\n<p><code>itemsPerPage</code> : Set the maximum number of results. (Default: 1000)</p>\n\n<p><code>page</code>         : If the number of results is bigger than the \"<code>itemsPerPage</code>\" you can\n                 specify the page of results. (Default: 1)</p>\n\n<p>The search will find datasets that have some data within the specified \ntime bounds.</p>\n\n<p>Returns a <code>erddapClient.ERDDAP_SearchResults</code> object</p>\n", "parameters": ["self", "filters"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.getAdvancedSearchURL", "modulename": "erddapClient", "qualname": "ERDDAP_Server.getAdvancedSearchURL", "type": "function", "doc": "<p>Builds the url call for the advanced Search ERDDAP API Rest service.</p>\n\n<p>Search filters kwargs:</p>\n\n<p><code>searchFor</code> : This is a Google-like search of the datasets metadata, set the words you \n              want to search for  with spaces between the words.  ERDDAP will search \n              for the words separately, not as a phrase. \n              To search for a phrase, put double quotes around the phrase (for \n              example, \"wind speed\"). \n              To exclude datasets with a specific word, use -excludedWord. \n              To exclude datasets with a specific phrase, use -\"excluded phrase\" \n              To search for specific attribute values, use attName=attValue\n              To find just grid or table datasets, include protocol=griddap \n              or protocol=tabledap</p>\n\n<p>Optional filters:</p>\n\n<p><code>protocolol</code>    : Set either: griddap, tabledap or wms (Default: (ANY))</p>\n\n<p><code>cdm_data_type</code> : Set either: grid, timeseries, point, timeseriesProfile, trajectory\n                  trajectoryProfile, etc.. (Default: (ANY))</p>\n\n<p><code>institution</code>   : Set either to one of the available instituion values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>ioos_category</code> : Set either to one of the available ioos_category values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>keywords</code>      : Set either to one of the available keywords values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>long_name</code>     : Set either to one of the available long_name values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>standard_name</code> : Set either to one of the available standard_name values in the ERDDAP\n                  (Default: (ANY))</p>\n\n<p><code>variableName</code>  : Set either to one of the available variable names values in the \n                  ERDDAP (Default: (ANY))</p>\n\n<p><code>minLon</code>, <code>maxLon</code> : Some datasets have longitude values within -180 to 180, others \n                     use 0 to 360. If you specify Min and Max Longitude within -180 to 180\n                     (or 0 to 360), ERDDAP will only find datasets that match the values \n                     you specify. Consider doing one search: longitude -180 to 360, or \n                     two searches: longitude -180 to 180, and 0 to 360.</p>\n\n<p><code>minLat</code>, <code>maxLat</code> : Set latitude bounds, range -90 to 90 </p>\n\n<p><code>minTime</code>, <code>maxTime</code> : Your can pass a <datetime> object or a string with the following\n                       specifications</p>\n\n<blockquote>\n  <ul>\n  <li>A time string with the format yyyy-MM-ddTHH:mm:ssZ, <br />\n  for example, 2009-01-21T23:00:00Z.  If you specify something, you must include yyyy-MM-dd. <br />\n  You can omit (backwards from the end) Z, :ss, :mm, :HH, and T. <br />\n  Always use UTC (GMT/Zulu) time.   </li>\n  <li>Or specify the number of seconds since 1970-01-01T00:00:00Z.                                  </li>\n  <li>Or specify \"now-nUnits\", for example, \"now-7days\"        </li>\n  </ul>\n</blockquote>\n\n<p><code>itemsPerPage</code> : Set the maximum number of results. (Default: 1000)</p>\n\n<p><code>page</code>         : If the number of results is bigger than the \"<code>itemsPerPage</code>\" you can\n                 specify the page of results. (Default: 1)</p>\n\n<p>The search will find datasets that have some data within the specified \ntime bounds.</p>\n\n<p>Returns the string url for the search service.</p>\n", "parameters": ["self", "filetype", "searchFilters"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.getQueryAllDatasetsURL", "modulename": "erddapClient", "qualname": "ERDDAP_Server.getQueryAllDatasetsURL", "type": "function", "doc": "<p>This method returns a string URL with the allDatasets default \nTabledap Dataset from ERDDAP. </p>\n\n<p>Arguments:</p>\n\n<p><code>filetype</code> : The result format for the request</p>\n\n<p><code>constraints</code> : The request constraints list</p>\n\n<p>Returns a url string</p>\n", "parameters": ["self", "filetype", "constraints"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.statusPageURL", "modulename": "erddapClient", "qualname": "ERDDAP_Server.statusPageURL", "type": "variable", "doc": "<p>Returns the status.html url for the current ERDDAP Server reference.</p>\n"}, {"fullname": "erddapClient.ERDDAP_Server.parseStatusPage", "modulename": "erddapClient", "qualname": "ERDDAP_Server.parseStatusPage", "type": "function", "doc": "<p>This method will load the status.html page of the current ERRDAP server reference \nthis data is parsed into a OrderedDict, with the scalars, and DataFrames with the\ntables provided in status.html page.\nThe data will be available in the <code>erddapClient.ERDDAP_Server.statusValues</code> \nproperty</p>\n\n<p>Parameters:</p>\n\n<p><code>force</code> : Data is stored in a class property, if force is True, the data will be \n          reloaded, if False, the last loaded data is returned.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Server.statusValues", "modulename": "erddapClient", "qualname": "ERDDAP_Server.statusValues", "type": "variable", "doc": "<p>Returns a OrderedDict with the parsed data of the status.html page.\nMore information on the data provided in status.html: \n<a href=\"https://coastwatch.pfeg.noaa.gov/erddap/download/setup.html#monitoring\">ERDDAP documentaiton</a></p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset", "type": "class", "doc": "<p>Class to represent the shared attributes and methods of a ERDDAP Dataset\neither a griddap or tabledap.</p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.__init__", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "erddapurl", "datasetid", "protocol", "auth", "lazyload"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.DEFAULT_FILETYPE", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.DEFAULT_FILETYPE", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.BINARY_FILETYPES", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.BINARY_FILETYPES", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.setResultVariables", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.setResultVariables", "type": "function", "doc": "<p>This function sets the optional comma-separated list of variables \ncalled \"resultsVariables\" as part of the query for data request.\n(for example: longitude,latitude,time,station,wmo_platform_code,T_25).\nFor each variable in resultsVariables, there will be a column in the \nresults table, in the same order. If you don't specify any results \nvariables, the results table will include columns for all of the \nvariables in the dataset.</p>\n\n<p>Arguments</p>\n\n<p><code>variables</code> : The list of variables, this can be a string with the \n              comma separated variables, or a list.</p>\n\n<p>Returns the current object allowing chaining functions.</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.addResultVariable", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.addResultVariable", "type": "function", "doc": "<p>Adds a variable to the data request query element \"resultsVariables\"</p>\n\n<p>Arguments</p>\n\n<p><code>variable</code> : A string with the variable name add.</p>\n", "parameters": ["self", "variable"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.setConstraints", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.setConstraints", "type": "function", "doc": "<p>This functions sets the constraints for the data request query.</p>\n\n<p>More on ERDDAP constraints: https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#query</p>\n", "parameters": ["self", "constraintListOrDict"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.addConstraints", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.addConstraints", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "constraintListOrDict"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.addConstraint", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.addConstraint", "type": "function", "doc": "<p>This adds a constraint to the data request query.</p>\n\n<p>Arguments</p>\n\n<p><code>constraint</code> : This can be a string with the constraint, or a dictionary\n               element, being the key the first part of the constraint, and \n               the dict value the constraint value.</p>\n\n<p>Example:</p>\n\n<pre><code>&gt;&gt;&gt; dataset.addConstraint('time&gt;=2020-12-29T00:00:00Z')\n&gt;&gt;&gt; dataset.addConstraint({ 'time&gt;=' : dt.datetime(2020,12,29) })\n</code></pre>\n\n<p>More on ERDDAP constraints: https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#query</p>\n", "parameters": ["self", "constraint"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getDataRequestURL", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getDataRequestURL", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "filetype", "useSafeURL"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getURL", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getURL", "type": "function", "doc": "<p>Buils and returns a strint with the data request query, with the available\nresultsVariables, constraints and operations provided.</p>\n", "parameters": ["self", "filetype", "useSafeURL"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getBaseURL", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getBaseURL", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "filetype"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getAttribute", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getAttribute", "type": "function", "doc": "<p>Returns the value for a attribute name in the dataset. If the metadata of the\ndataset is not already in memory, this functions will load it, calling the\nfunction <code>erddapClient.ERDDAP_Dataset.loadMetadata</code></p>\n", "parameters": ["self", "attribute", "variableName"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.loadMetadata", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.loadMetadata", "type": "function", "doc": "<p>Loads in to memory the metadata atributes and values available in the info\npage of the dataset.</p>\n\n<p>Arguments:</p>\n\n<p><code>force</code> : If true, this method will reload the metadata attributes\neven if the information where already downloaded.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.variables", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.variables", "type": "variable", "doc": "<p>Returns list of variables of this dataset, and it's associate metadata</p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.dimensions", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.dimensions", "type": "variable", "doc": "<p>Returns a list of the dataset dimensions, and it's associate metadata</p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.info", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.info", "type": "variable", "doc": "<p>Returns a list of the global metadata of this dataset.</p>\n"}, {"fullname": "erddapClient.ERDDAP_Dataset.getMetadataURL", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getMetadataURL", "type": "function", "doc": "<p>Returns a string with the url to request the metadata for the dataset.</p>\n\n<p>Arguments</p>\n\n<p><code>filetype</code> : The filetype for the metadata request, defaults to 'json'</p>\n", "parameters": ["self", "filetype"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.clearConstraints", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.clearConstraints", "type": "function", "doc": "<p>Clears from the constrains stack all the constraints provided by the \n<code>erddapClient.ERDDAP_Dataset.setConstraints</code>, <code>erddapClient.ERDDAP_Dataset.addConstraint</code>\nmethods.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.clearServerSideFunctions", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.clearServerSideFunctions", "type": "function", "doc": "<p>Clears from the server side functions stack all the functions provided by the \nmethods available, like <code>erddapClient.ERDDAP_Tabledap.orderBy</code>, \n<code>erddapClient.ERDDAP_Tabledap.orderByClosest</code>, etc.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.clearResultVariables", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.clearResultVariables", "type": "function", "doc": "<p>Clears from the results variables stack all the variabkles provided by the \n<code>erddapClient.ERDDAP_Dataset.setResultsVariables</code> and \n<code>erddapClient.ERDDAP_Dataset.addResultVariable</code> methods</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.clearQuery", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.clearQuery", "type": "function", "doc": "<p>Clears all the query elements of the stack, variables, constraints and\nserver side variables.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getData", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getData", "type": "function", "doc": "<p>Makes a data request to the ERDDAP server, the request url is build\nusing the <code>erddapClient.ERDDAP_Dataset.getURL</code> function. </p>\n\n<p>Aditional request arguments for the urlread function can be provided\nas kwargs in this function.</p>\n\n<p>Returns either a string or a binary format (<code>erddapClient.ERDDAP_Dataset.BINARY_FILETYPES</code>) \ndepending on the filetype specified in the query.</p>\n", "parameters": ["self", "filetype", "request_kwargs"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Dataset.getDataFrame", "modulename": "erddapClient", "qualname": "ERDDAP_Dataset.getDataFrame", "type": "function", "doc": "<p>This method makes a data request to the ERDDAP server in csv format\nthen convert it to a pandas object. </p>\n\n<p>The pandas object is created using the read_csv method, and \nadditional arguments for this method can be provided as kwargs in this\nmethod.</p>\n\n<p>Returns the pandas DataFrame object.</p>\n", "parameters": ["self", "request_kwargs", "kwargs"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap", "type": "class", "doc": "<p>Class with the representation and methods for a ERDDAP Tabledap Dataset</p>\n"}, {"fullname": "erddapClient.ERDDAP_Tabledap.__init__", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.__init__", "type": "function", "doc": "<p>Constructs the ERDDAP_Tabledap, and if specified, automaticaly loads\nthe metadata information of the dataset.</p>\n\n<p>Arguments:</p>\n\n<p><code>url</code> : The url of the ERDDAP Server that contains the tabledap dataset.</p>\n\n<p><code>datasetid</code> : The identifier of the dataset.</p>\n\n<p><code>auth</code> : Tupple with username and password for a protected ERDDAP Server.</p>\n\n<p><code>lazyload</code> : If false calls the loadMetadata method.</p>\n", "parameters": ["self", "url", "datasetid", "auth", "lazyload"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.DEFAULT_FILETYPE", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.DEFAULT_FILETYPE", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Tabledap.loadMetadata", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.loadMetadata", "type": "function", "doc": "<p>Loads in to memory the metadata atributes and values available in the info\npage of the dataset.</p>\n\n<p>Arguments:</p>\n\n<p><code>force</code> : If true, this method will reload the metadata attributes\neven if the information where already downloaded.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.addVariablesWhere", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.addVariablesWhere", "type": "function", "doc": "<p>Adds \"addVariablesWhere\" server side function to the data request query\n<a href=\"https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#addVariablesWhere\">https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#addVariablesWhere</a></p>\n", "parameters": ["self", "attributeName", "attributeValue"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.distinct", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.distinct", "type": "function", "doc": "<p>Adds \"distinct\" server side function to the data request query\n<a href=\"https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#distinct\">https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#distinct</a></p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.units", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.units", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#units</p>\n", "parameters": ["self", "value"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderBy", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderBy", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderBy</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByClosest", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByClosest", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByClosest</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByCount", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByCount", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByCount</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByLimit", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByLimit", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByLimit</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByMax", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByMax", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByMax</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByMin", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByMin", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByMin</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByMinMax", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByMinMax", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByMinMax</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.orderByMean", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.orderByMean", "type": "function", "doc": "<p>https://coastwatch.pfeg.noaa.gov/erddap/tabledap/documentation.html#orderByMean</p>\n", "parameters": ["self", "variables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Tabledap.addServerSideFunction", "modulename": "erddapClient", "qualname": "ERDDAP_Tabledap.addServerSideFunction", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "functionName", "arguments"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap", "type": "class", "doc": "<p>Class with the representation and methods for a ERDDAP Griddap Dataset</p>\n"}, {"fullname": "erddapClient.ERDDAP_Griddap.__init__", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "url", "datasetid", "auth", "lazyload"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.DEFAULT_FILETYPE", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.DEFAULT_FILETYPE", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Griddap.loadMetadata", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.loadMetadata", "type": "function", "doc": "<p>Loads in to memory the metadata atributes and values available in the info\npage of the dataset.</p>\n\n<p>Arguments:</p>\n\n<p><code>force</code> : If true, this method will reload the metadata attributes\neven if the information where already downloaded.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.dimensions", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.dimensions", "type": "variable", "doc": "<p>Returns a list of the dataset dimensions, and it's associate metadata</p>\n"}, {"fullname": "erddapClient.ERDDAP_Griddap.clearQuery", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.clearQuery", "type": "function", "doc": "<p>Clears all the query elements of the stack, variables, constraints and\nserver side variables.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.loadDimensionValues", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.loadDimensionValues", "type": "function", "doc": "<p>This methods loads from the ERDDAP Server the dimension values\nfor the current griddap dataset.  This values will be used to \ncalculate integer indexes for opendap requests.</p>\n\n<p>Arguments:</p>\n\n<p><code>force</code> : If true, this method will reload the dimensions values\neven if the values where already downloaded.</p>\n", "parameters": ["self", "force"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.getxArray", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.getxArray", "type": "function", "doc": "<p>Returns an xarray object subset of the ERDDAP dataset current selection query</p>\n\n<p>Arguments:</p>\n\n<p>This method will pass all kwargs to the xarray.open_dataset method.</p>\n", "parameters": ["self", "kwargs_od"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.getncDataset", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.getncDataset", "type": "function", "doc": "<p>Returns an netCDF4.Dataset object subset of the ERDDAP dataset</p>\n\n<p>Arguments:</p>\n\n<p>This method will pass all kwargs to the netCDF4.Dataset method.</p>\n", "parameters": ["self", "kwargs"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.getDataRequestURL", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.getDataRequestURL", "type": "function", "doc": "<p>Returns the fully built ERDDAP data request url with the available components. </p>\n\n<p>Arguments:</p>\n\n<p><code>filetype</code> : The request download format </p>\n\n<p><code>useSafeURL</code> : If True the query part of the url will be encoded</p>\n\n<p><code>resultVariables</code> : If None, the self.resultVariables will be used.</p>\n", "parameters": ["self", "filetype", "useSafeURL", "resultVariables"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.setSubset", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.setSubset", "type": "function", "doc": "<p>Sets a query subset for griddap request, by using dimension names</p>\n\n<p>Usage example:</p>\n\n<pre><code>dsub = ( remote.setResultVariables(['temperature','salinity'])\n               .setSubset( time=slice(dt.datetime(2014,6,15), dt.datetime(2014,7,15)),\n                           depth=0,\n                           latitude=slice(18.10, 31.96), \n                           longitude=slice(-98, -76.41))\n               .getxArray() )\n</code></pre>\n", "parameters": ["self", "pdims", "kwdims"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.setSubsetI", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.setSubsetI", "type": "function", "doc": "<p>Sets a query subset for griddap request, by using its positional\ninteger index.</p>\n\n<p>Usage example:</p>\n\n<pre><code>dsub = ( remote.setResultVariables(['temperature','salinity'])\n               .setSubsetI( time=slice(-10,-1),\n                            depth=0,\n                            latitude=slice(10, 150), \n                            longitude=slice(20, 100) )\n               .getxArray() )\n</code></pre>\n", "parameters": ["self", "pdims", "kwdims"], "funcdef": "def"}, {"fullname": "erddapClient.ERDDAP_Griddap.positional_indexes", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.positional_indexes", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "erddapClient.ERDDAP_Griddap.xarray", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.xarray", "type": "variable", "doc": "<p>Returns the xarray object representation of the whoe dataset. Ths method creates the\nxarray object by calling the open_dataset method and connecting to the \nopendap endpoint that ERDDAP provides.</p>\n"}, {"fullname": "erddapClient.ERDDAP_Griddap.ncDataset", "modulename": "erddapClient", "qualname": "ERDDAP_Griddap.ncDataset", "type": "variable", "doc": "<p>Returns the netCDF4.Dataset object representation of the whole dataset. Ths method\ncreates the Dataset object by calling the Dataset constructor connecting \nto the opendap endpoint that ERDDAP provides.</p>\n"}]